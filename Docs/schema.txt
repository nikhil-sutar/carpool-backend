openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /bookings/:
    get:
      operationId: bookings_list
      parameters:
      - in: query
        name: boarding_point
        schema:
          type: string
      - in: query
        name: dropping_point
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      tags:
      - bookings
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
          description: ''
    post:
      operationId: bookings_create
      tags:
      - bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /bookings/{id}/:
    get:
      operationId: bookings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /bookings/{id}/cancel_booking/:
    post:
      operationId: bookings_cancel_booking_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /bookings/my_bookings/:
    get:
      operationId: bookings_my_bookings_retrieve
      tags:
      - bookings
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /ride/:
    get:
      operationId: ride_list
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
      - in: query
        name: destination
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
      tags:
      - ride
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ride'
          description: ''
    post:
      operationId: ride_create
      tags:
      - ride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /ride/{id}/:
    get:
      operationId: ride_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ride.
        required: true
      tags:
      - ride
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
    put:
      operationId: ride_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ride.
        required: true
      tags:
      - ride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
    patch:
      operationId: ride_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ride.
        required: true
      tags:
      - ride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRide'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRide'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
    delete:
      operationId: ride_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ride.
        required: true
      tags:
      - ride
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /ride/{id}/cancel/:
    post:
      operationId: ride_cancel_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ride.
        required: true
      tags:
      - ride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /ride/{id}/complete/:
    post:
      operationId: ride_complete_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ride.
        required: true
      tags:
      - ride
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ride'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ride'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ride'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /ride/my_rides/:
    get:
      operationId: ride_my_rides_retrieve
      tags:
      - ride
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ride'
          description: ''
  /user/approve-verification-requests/:
    get:
      operationId: user_approve_verification_requests_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverVerification'
          description: ''
    post:
      operationId: user_approve_verification_requests_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverVerification'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
  /user/approve-verification-requests/{id}/:
    get:
      operationId: user_approve_verification_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
    put:
      operationId: user_approve_verification_requests_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverVerification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
    patch:
      operationId: user_approve_verification_requests_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDriverVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDriverVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDriverVerification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
    delete:
      operationId: user_approve_verification_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /user/approve-verification-requests/{id}/approve/:
    post:
      operationId: user_approve_verification_requests_approve_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverVerification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
  /user/approve-verification-requests/{id}/reject/:
    post:
      operationId: user_approve_verification_requests_reject_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverVerification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
  /user/driver-documents/:
    get:
      operationId: user_driver_documents_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverDocument'
          description: ''
    post:
      operationId: user_driver_documents_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDocument'
          description: ''
  /user/driver-documents/{id}/:
    get:
      operationId: user_driver_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver documents.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDocument'
          description: ''
    put:
      operationId: user_driver_documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver documents.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverDocument'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDocument'
          description: ''
    patch:
      operationId: user_driver_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver documents.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDriverDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDriverDocument'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDriverDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverDocument'
          description: ''
    delete:
      operationId: user_driver_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver documents.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /user/driver-profile/:
    get:
      operationId: user_driver_profile_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverProfile'
          description: ''
  /user/driver-profile/{id}/:
    get:
      operationId: user_driver_profile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver profile.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverProfile'
          description: ''
  /user/driver-profile/{id}/verify/:
    post:
      operationId: user_driver_profile_verify_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver profile.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverProfile'
          description: ''
  /user/driver-verification/:
    get:
      operationId: user_driver_verification_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DriverVerification'
          description: ''
    post:
      operationId: user_driver_verification_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DriverVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DriverVerification'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
  /user/driver-verification/{id}/:
    get:
      operationId: user_driver_verification_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this driver verification.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverVerification'
          description: ''
  /user/passenger-profile/:
    get:
      operationId: user_passenger_profile_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengerProfile'
          description: ''
  /user/passenger-profile/{id}/:
    get:
      operationId: user_passenger_profile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this passenger profile.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerProfile'
          description: ''
  /user/profile/:
    get:
      operationId: user_profile_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: user_profile_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /user/profile/{id}/:
    get:
      operationId: user_profile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: user_profile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: user_profile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: user_profile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /user/register/:
    get:
      operationId: user_register_list
      tags:
      - user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_register_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /vehicle/:
    get:
      operationId: vehicle_list
      tags:
      - vehicle
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
          description: ''
    post:
      operationId: vehicle_create
      tags:
      - vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
  /vehicle-make/:
    get:
      operationId: vehicle_make_list
      tags:
      - vehicle-make
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleMake'
          description: ''
    post:
      operationId: vehicle_make_create
      tags:
      - vehicle-make
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleMake'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleMake'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleMake'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleMake'
          description: ''
  /vehicle-make/{id}/:
    get:
      operationId: vehicle_make_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle make.
        required: true
      tags:
      - vehicle-make
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleMake'
          description: ''
    put:
      operationId: vehicle_make_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle make.
        required: true
      tags:
      - vehicle-make
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleMake'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleMake'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleMake'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleMake'
          description: ''
    patch:
      operationId: vehicle_make_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle make.
        required: true
      tags:
      - vehicle-make
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicleMake'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicleMake'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicleMake'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleMake'
          description: ''
    delete:
      operationId: vehicle_make_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle make.
        required: true
      tags:
      - vehicle-make
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /vehicle-model/:
    get:
      operationId: vehicle_model_list
      tags:
      - vehicle-model
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VehicleModel'
          description: ''
    post:
      operationId: vehicle_model_create
      tags:
      - vehicle-model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleModel'
          description: ''
  /vehicle-model/{id}/:
    get:
      operationId: vehicle_model_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle model.
        required: true
      tags:
      - vehicle-model
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleModel'
          description: ''
    put:
      operationId: vehicle_model_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle model.
        required: true
      tags:
      - vehicle-model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VehicleModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VehicleModel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleModel'
          description: ''
    patch:
      operationId: vehicle_model_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle model.
        required: true
      tags:
      - vehicle-model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicleModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicleModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicleModel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleModel'
          description: ''
    delete:
      operationId: vehicle_model_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle model.
        required: true
      tags:
      - vehicle-model
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /vehicle/{id}/:
    get:
      operationId: vehicle_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - vehicle
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    put:
      operationId: vehicle_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    patch:
      operationId: vehicle_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVehicle'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
          description: ''
    delete:
      operationId: vehicle_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this vehicle.
        required: true
      tags:
      - vehicle
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Booking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        passenger:
          type: integer
          readOnly: true
        passenger_display:
          type: string
          readOnly: true
        ride:
          type: integer
        ride_display:
          type: string
          readOnly: true
        boarding_point:
          type: string
          maxLength: 250
        dropping_point:
          type: string
          maxLength: 250
        seats_booked:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        status:
          allOf:
          - $ref: '#/components/schemas/BookingStatusEnum'
          readOnly: true
          default: confirmed
      required:
      - boarding_point
      - dropping_point
      - id
      - passenger
      - passenger_display
      - ride
      - ride_display
      - seats_booked
      - status
    BookingStatusEnum:
      enum:
      - pending
      - confirmed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `confirmed` - Confirmed
        * `cancelled` - Cancelled
    DriverDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_profile:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - driver_profile
      - file
      - id
      - uploaded_at
    DriverProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
        is_driver_verified:
          type: boolean
          readOnly: true
        total_rides_as_a_driver:
          type: integer
          readOnly: true
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - is_driver_verified
      - profile
      - rating
      - total_rides_as_a_driver
      - updated_at
    DriverVerification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_profile:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/DriverVerificationStatusEnum'
        admin_feedback:
          type: string
          readOnly: true
          nullable: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - admin_feedback
      - driver_profile
      - id
      - submitted_at
      - updated_at
    DriverVerificationStatusEnum:
      enum:
      - pending
      - approved
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
    GenderEnum:
      enum:
      - male
      - female
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
    NullEnum:
      enum:
      - null
    PassengerProfile:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/Profile'
        total_rides_as_a_passenger:
          type: integer
          readOnly: true
      required:
      - profile
      - total_rides_as_a_passenger
    PatchedDriverDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_profile:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
    PatchedDriverVerification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        driver_profile:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/DriverVerificationStatusEnum'
        admin_feedback:
          type: string
          readOnly: true
          nullable: true
        submitted_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProfile:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 50
        last_name:
          type: string
          nullable: true
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRide:
      type: object
      properties:
        driver:
          allOf:
          - $ref: '#/components/schemas/PublicDriver'
          readOnly: true
        vehicle:
          allOf:
          - $ref: '#/components/schemas/PublicVehicle'
          readOnly: true
        vehicle_id:
          type: integer
          writeOnly: true
        source:
          type: string
          maxLength: 250
        destination:
          type: string
          maxLength: 250
        boarding_points: {}
        dropping_points: {}
        fare:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        seats_offered:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        seats_booked:
          type: integer
          readOnly: true
        seats_available:
          type: integer
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/RideStatusEnum'
        status_display:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
          readOnly: true
        duration_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedVehicle:
      type: object
      properties:
        owner:
          type: integer
          readOnly: true
        owner_display:
          type: string
          readOnly: true
        model:
          type: integer
        model_display:
          type: string
          readOnly: true
        registration_number:
          type: string
          description: Official license plate, e.g. MH09GR9392
          maxLength: 15
        seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        color:
          type: string
          nullable: true
          maxLength: 50
        manufacture_year:
          type: integer
          maximum: 2025
          minimum: 2005
          nullable: true
    PatchedVehicleMake:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
    PatchedVehicleModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        make:
          type: integer
        make_display:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
    Profile:
      type: object
      properties:
        user:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 50
        last_name:
          type: string
          nullable: true
          maxLength: 50
        profile_picture:
          type: string
          format: uri
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - updated_at
      - user
    PublicDriver:
      type: object
      properties:
        profile:
          type: integer
        name:
          type: string
          readOnly: true
        is_driver_verified:
          type: boolean
        total_rides_as_a_driver:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - profile
      - updated_at
    PublicVehicle:
      type: object
      properties:
        model_name:
          type: string
          readOnly: true
        color:
          type: string
          nullable: true
          maxLength: 50
      required:
      - model_name
    Ride:
      type: object
      properties:
        driver:
          allOf:
          - $ref: '#/components/schemas/PublicDriver'
          readOnly: true
        vehicle:
          allOf:
          - $ref: '#/components/schemas/PublicVehicle'
          readOnly: true
        vehicle_id:
          type: integer
          writeOnly: true
        source:
          type: string
          maxLength: 250
        destination:
          type: string
          maxLength: 250
        boarding_points: {}
        dropping_points: {}
        fare:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        seats_offered:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        seats_booked:
          type: integer
          readOnly: true
        seats_available:
          type: integer
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/RideStatusEnum'
        status_display:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
          readOnly: true
        duration_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - destination
      - driver
      - duration
      - duration_display
      - fare
      - seats_available
      - seats_booked
      - seats_offered
      - source
      - start_time
      - status_display
      - updated_at
      - vehicle
      - vehicle_id
    RideStatusEnum:
      enum:
      - open
      - full
      - completed
      - cancelled
      type: string
      description: |-
        * `open` - Open
        * `full` - Full
        * `completed` - Completed
        * `cancelled` - Cancelled
    RoleEnum:
      enum:
      - driver
      - passenger
      - admin
      type: string
      description: |-
        * `driver` - Driver
        * `passenger` - Passenger
        * `admin` - Admin
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 13
        role:
          $ref: '#/components/schemas/RoleEnum'
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
        is_staff:
          type: boolean
          readOnly: true
      required:
      - date_joined
      - email
      - is_staff
      - password
      - password2
      - updated_at
    Vehicle:
      type: object
      properties:
        owner:
          type: integer
          readOnly: true
        owner_display:
          type: string
          readOnly: true
        model:
          type: integer
        model_display:
          type: string
          readOnly: true
        registration_number:
          type: string
          description: Official license plate, e.g. MH09GR9392
          maxLength: 15
        seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        color:
          type: string
          nullable: true
          maxLength: 50
        manufacture_year:
          type: integer
          maximum: 2025
          minimum: 2005
          nullable: true
      required:
      - model
      - model_display
      - owner
      - owner_display
      - registration_number
    VehicleMake:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - name
    VehicleModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        make:
          type: integer
        make_display:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - id
      - make
      - make_display
      - name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
